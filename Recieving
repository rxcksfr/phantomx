return function(player, players, tab, autoRecieveEnabled, recievePower, recieveOffset)
	local recieveDebounce = false
	local recieveThreshold = 2

	local function findNearestPlayerOnCursor()
		local mouse = player:GetMouse()
		local nearestPlayer = nil
		local shortestDistance = math.huge

		for _, otherPlayer in pairs(players:GetPlayers()) do
			if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") and otherPlayer.Team == player.Team then
				local playerScreenPosition = workspace.CurrentCamera:WorldToScreenPoint(otherPlayer.Character.Head.Position)
				local mouseDistance = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(playerScreenPosition.X, playerScreenPosition.Y)).Magnitude
				if mouseDistance < shortestDistance then
					shortestDistance = mouseDistance
					nearestPlayer = otherPlayer
				end
			end
		end

		return nearestPlayer
	end

	local RecieveSection = tab:AddSection({
		Name = "Receving"
	})

	RecieveSection:AddToggle({
		Name = "Enable Auto Recieve",
		Default = false,
		Callback = function(Value)
			autoRecieveEnabled = Value
		end    
	})

	RecieveSection:AddSlider({
		Name = "Recieve Power",
		Min = 0,
		Max = 100,
		Default = 0,
		Color = Color3.fromRGB(255,255,255),
		Increment = 1,
		ValueName = "Power",
		Callback = function(Value)
			recievePower = Value
		end    
	})

	RecieveSection:AddSlider({
		Name = "Recieve Offset",
		Min = -50,
		Max = 100,
		Default = 0,
		Color = Color3.fromRGB(255,255,255),
		Increment = 1,
		ValueName = "Offset",
		Callback = function(Value)
			recieveOffset = Value
		end    
	})
	
	RecieveSection:AddSlider({
		Name = "Recieve Threshold",
		Min = -20,
		Max = 20,
		Default = 2,
		Color = Color3.fromRGB(255,255,255),
		Increment = 1,
		ValueName = "Threshold",
		Callback = function(Value)
			recieveThreshold = Value
		end    
	})

	game:GetService("RunService").RenderStepped:Connect(function()
		if autoRecieveEnabled and not recieveDebounce then
			for _, ball in pairs(workspace:WaitForChild("BallFolder"):GetChildren()) do
				if ball.Position.Y <= recieveThreshold and recieveOffset and player.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then
					recieveDebounce = true 
					local nearestPlayer = findNearestPlayerOnCursor()
					local direction

					if nearestPlayer then
						direction = (nearestPlayer.Character.Head.Position + Vector3.new(0, recieveOffset, 0) - player.Character.HumanoidRootPart.Position).Unit
					else
						local mouse = player:GetMouse()
						local mouseHit = mouse.Hit.p
						direction = (mouseHit + Vector3.new(0, recieveOffset, 0) - player.Character.HumanoidRootPart.Position).Unit
					end

					local args = {
						[1] = direction,
						[2] = recievePower
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Mechanics"):WaitForChild("Pass"):FireServer(unpack(args))

					wait(1)
					recieveDebounce = false
				end
			end
		end
	end)
end
